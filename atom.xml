<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aurora</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-01T12:03:50.796Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Aurora</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java接口类和抽象题目实战</title>
    <link href="http://yoursite.com/2020/05/01/java%E6%8E%A5%E5%8F%A3%E7%B1%BB%E5%92%8C%E6%8A%BD%E8%B1%A1%E9%A2%98%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    <id>http://yoursite.com/2020/05/01/java%E6%8E%A5%E5%8F%A3%E7%B1%BB%E5%92%8C%E6%8A%BD%E8%B1%A1%E9%A2%98%E7%9B%AE%E5%AE%9E%E6%88%98/</id>
    <published>2020-04-30T16:00:00.000Z</published>
    <updated>2020-05-01T12:03:50.796Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2020/05/01/java%E6%8E%A5%E5%8F%A3%E7%B1%BB%E5%92%8C%E6%8A%BD%E8%B1%A1%E9%A2%98%E7%9B%AE%E5%AE%9E%E6%88%98/1.png" alt="1"></p><p>图片来源：<a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">https://www.jetbrains.com/idea/</a></p><p>此文章只是我本人自己的学习经验，所以有错误的可以指出来。仅供参考和学习交流。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><blockquote><p>1、定义形状接口，包含两个求形状的面积的方法getArea和求周长的方法getGirth，和一个常量PI=3.14159.</p><p>任务：</p><p>定义圆形类，实现形状接口。通过构造方法赋值，求半径为3.5的圆的面积和周长。</p><p>定义长方形类，实现形状接口。通过构造方法赋值，求长为5，高为6的矩形的面积和周长。</p><p>定义梯形类，实现形状接口。通过构造方法赋值，求上底为3.2，下底为4.8，高为2.2的梯形的面积。</p></blockquote><p>首先我们来看这个题目，非常形象的把接口，抽象，继承等几个概念给具体化出来。</p><p>在java中我们要用到面向对象的思想，所以，通过这几个对象来了解并做出相对框架是不难的，只要熟练掌握题目中所需要用到的关键字和函数的应用，就基本上一目了然，十分简单。</p><p>这个题我准备用两种方法去解决它。</p><h3 id="第一种解决方法"><a href="#第一种解决方法" class="headerlink" title="第一种解决方法"></a>第一种解决方法</h3><p>首先，需要包含求形状的面积方法，求形状的面积的方法getArea和求周长的方法getGirth，和一个常量PI=3.14159。</p><p> 通过上面的条件我们来创建一个接口，接口里面在创建2个方法getArea、getGirth和一个共有的静态常量PI(也就是在接口定义一个常量)。</p><h4 id="创建整体求形状方法的接口"><a href="#创建整体求形状方法的接口" class="headerlink" title="创建整体求形状方法的接口"></a>创建整体求形状方法的接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Shape</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><h4 id="在接口中定义方法和常量PI"><a href="#在接口中定义方法和常量PI" class="headerlink" title="在接口中定义方法和常量PI"></a>在接口中定义方法和常量PI</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">double</span> <span class="title">getGirth</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> PI = <span class="number">3.14159</span>;</span><br></pre></td></tr></table></figure><p>其中abstract public和public abstract通过这两个去定义方法都是不会报错的，我通过网上的资料得出，顺序不会影响方法的变换，详细和错误可以在下面评论区指出我一下。</p><p>定义常量中public final static 和 public static final 都表示共有的静态常量，但是一般推荐使用public static final来对常量进行表示，所以这个两个也是一样都可以运行不会报错，并且就算不加public static final直接使用属性去对对象进行赋值也是可以的。</p><p>public static final其中public表示的是公用的权限，static表示静态，而final表示该常量只能被赋值一次，不能改变。</p><h4 id="通过类对接口中的所有方法进行实现"><a href="#通过类对接口中的所有方法进行实现" class="headerlink" title="通过类对接口中的所有方法进行实现"></a>通过类对接口中的所有方法进行实现</h4><p>题目需要圆形、矩形和梯形并且需要构造方法进行赋值，所以创建图形的类去对接口进行实现，在类中定义构造方法然后进行赋值。</p><p>由于接口中的方法都是抽象方法，因此不能通过实例化对象的方式来调用接口中的方法，所以需要定义一个类然后由implements关键字实现接口中的所有方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">circular</span> <span class="keyword">implements</span> <span class="title">shape</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><p> 在circular类中创建构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> r ;<span class="comment">//给r对象创建属性</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">circular</span><span class="params">(<span class="keyword">double</span> r)</span></span>&#123; <span class="comment">//创建构造方法</span></span><br><span class="line"><span class="keyword">this</span>.r=r;<span class="comment">//给r进行赋值操作</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> Area = PI*(r*r); <span class="comment">//在 getArea方法中创建圆形面积公式</span></span><br><span class="line">    <span class="keyword">return</span> Area; <span class="comment">//返回Area的值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getGirth</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> Girth= <span class="number">2</span>*PI*r; <span class="comment">//在getGirth方法中创建圆形周长的公式</span></span><br><span class="line">    <span class="keyword">return</span> Girth; <span class="comment">//返回Girth的值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="最后在main方法中对方法进行引用和打印值"><a href="#最后在main方法中对方法进行引用和打印值" class="headerlink" title="最后在main方法中对方法进行引用和打印值"></a>最后在main方法中对方法进行引用和打印值</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Shape_impl</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">circular getcircular = <span class="keyword">new</span> circular(<span class="number">3.5</span>); <span class="comment">//对circular类进行实例化</span></span><br><span class="line">        System.out.println(<span class="string">"圆形的面积为："</span>+getcircular.getArea());</span><br><span class="line">System.out.println(<span class="string">"圆形的周长为："</span>+getcircular.getGirth());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有的人可能会说它不是抽象类的吗，所以不是不能被实例化吗？</p><p>首先circular类它只是通过implements来对接口的方法进行实现，所以它不是一个抽象类，可以进行实例化操作。</p><p>最后矩形和梯形的基本和上面中圆形使用的方法一样，所以就不做具体的说明了。</p><h4 id="下面是完整的代码"><a href="#下面是完整的代码" class="headerlink" title="下面是完整的代码"></a>下面是完整的代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> shape_packet;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getGirth</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> PI=<span class="number">3.14159</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">circular</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> r;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">circular</span><span class="params">(<span class="keyword">double</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.r = r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> Area = PI*(r*r);</span><br><span class="line"><span class="keyword">return</span> Area;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getGirth</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> Gieth = <span class="number">2</span>*PI*r;</span><br><span class="line"><span class="keyword">return</span> Gieth;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rectangle</span> <span class="keyword">implements</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> logn,hight;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">rectangle</span><span class="params">(<span class="keyword">int</span> logn,<span class="keyword">int</span> hight)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.logn= logn;</span><br><span class="line"><span class="keyword">this</span>.hight= hight;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> Area = logn*hight;</span><br><span class="line"><span class="keyword">return</span> Area;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getGirth</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> Girth = (logn*<span class="number">2</span>)+(hight*<span class="number">2</span>);</span><br><span class="line"><span class="keyword">return</span> Girth;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">trapezoid</span> <span class="keyword">implements</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> upper,land,height;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">trapezoid</span> <span class="params">(<span class="keyword">double</span> upper,<span class="keyword">double</span> land,<span class="keyword">double</span> height)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.upper=upper;</span><br><span class="line"><span class="keyword">this</span>.land=land;</span><br><span class="line"><span class="keyword">this</span>.height=height;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> Area = (upper+land)*height/<span class="number">2</span>; </span><br><span class="line"><span class="keyword">return</span> Area;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getGirth</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Shape_impl</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">circular getcircular = <span class="keyword">new</span> circular(<span class="number">3.5</span>);</span><br><span class="line">rectangle getrectangle = <span class="keyword">new</span> rectangle(<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line">trapezoid gettrapezoid = <span class="keyword">new</span> trapezoid(<span class="number">3.2</span>,<span class="number">4.8</span>,<span class="number">2.2</span>);</span><br><span class="line">System.out.println(<span class="string">"圆形的面积为："</span>+getcircular.getArea());</span><br><span class="line">System.out.println(<span class="string">"圆形的周长为："</span>+getcircular.getGirth());</span><br><span class="line">System.out.println(<span class="string">"矩形的面积为："</span>+getrectangle.getArea());</span><br><span class="line">System.out.println(<span class="string">"矩形的周长为："</span>+getrectangle.getGirth());</span><br><span class="line">System.out.println(<span class="string">"梯形的面积为："</span>+gettrapezoid.getArea());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二种解决方法"><a href="#第二种解决方法" class="headerlink" title="第二种解决方法"></a>第二种解决方法</h3><p>开始时是和第一种方法类似，只是把形状的类改为了抽象类的方法去进行解决。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">circular</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> r;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">circular</span><span class="params">(<span class="keyword">double</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.r = r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> Area = PI*(r*r);</span><br><span class="line"><span class="keyword">return</span> Area;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getGirth</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> Gieth = <span class="number">2</span>*PI*r;</span><br><span class="line"><span class="keyword">return</span> Gieth;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先这一步是通过抽象化这个类去实现的，和上面的方法不一样，上面没有进行抽象化类的概念。</p><h4 id="抽象类就不能去实例化对象"><a href="#抽象类就不能去实例化对象" class="headerlink" title="抽象类就不能去实例化对象"></a>抽象类就不能去实例化对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">circular getcircular = <span class="keyword">new</span> circular(<span class="number">3.5</span>);<span class="comment">//第二方法不能用这种方法去调用类中的构造方法</span></span><br></pre></td></tr></table></figure><p>抽象化以后，如果不能实例化去调用那么如何解决这个问题？那就是去继承抽象类在对继承的类进行功能的拓展。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">circular2</span> <span class="keyword">extends</span> <span class="title">circular</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><h4 id="继承以后定义构造函数"><a href="#继承以后定义构造函数" class="headerlink" title="继承以后定义构造函数"></a>继承以后定义构造函数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">circular2</span><span class="params">(<span class="keyword">double</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(r); <span class="comment">//访问抽象类的构造方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="定义完以后对类的功能进行拓展"><a href="#定义完以后对类的功能进行拓展" class="headerlink" title="定义完以后对类的功能进行拓展"></a>定义完以后对类的功能进行拓展</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"圆的周长:"</span>+<span class="keyword">super</span>.getGirth()+<span class="string">"圆的面积："</span>+<span class="keyword">super</span>.getArea()+<span class="string">"圆的半径:"</span></span><br><span class="line">+ <span class="keyword">super</span>.r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过void（空值）定义的函数名printA去对面积等数值进行打印</p><p>之后通过main方法去对circular2类进行实例化操作,然后引用printA对circular2类中的方法进行实现，并且打印数值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Shape_impl</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">circular2 cir2 =<span class="keyword">new</span> circular2(<span class="number">3.5</span>);</span><br><span class="line">cir2.printA();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后面基本都是一样的操作。</p><h4 id="下面是完整的代码-1"><a href="#下面是完整的代码-1" class="headerlink" title="下面是完整的代码"></a>下面是完整的代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> shape_packet1;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getGirth</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> PI=<span class="number">3.14159</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">circular</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> r;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">circular</span><span class="params">(<span class="keyword">double</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.r = r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> Area = PI*(r*r);</span><br><span class="line"><span class="keyword">return</span> Area;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getGirth</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> Gieth = <span class="number">2</span>*PI*r;</span><br><span class="line"><span class="keyword">return</span> Gieth;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">circular2</span> <span class="keyword">extends</span> <span class="title">circular</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">circular2</span><span class="params">(<span class="keyword">double</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"圆的周长:"</span>+<span class="keyword">super</span>.getGirth()+<span class="string">"圆的面积："</span>+<span class="keyword">super</span>.getArea()+<span class="string">"圆的半径:"</span></span><br><span class="line">+ <span class="keyword">super</span>.r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">rectangle</span> <span class="keyword">implements</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> logn,hight;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">rectangle</span><span class="params">(<span class="keyword">int</span> logn,<span class="keyword">int</span> hight)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.logn= logn;</span><br><span class="line"><span class="keyword">this</span>.hight= hight;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> Area = logn*hight;</span><br><span class="line"><span class="keyword">return</span> Area;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getGirth</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> Girth = (logn*<span class="number">2</span>)+(hight*<span class="number">2</span>);</span><br><span class="line"><span class="keyword">return</span> Girth;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rectangle2</span> <span class="keyword">extends</span> <span class="title">rectangle</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">rectangle2</span><span class="params">(<span class="keyword">int</span> logn, <span class="keyword">int</span> hight)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(logn, hight);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"矩形的面积："</span>+<span class="keyword">super</span>.getArea()+<span class="string">"矩形的周长："</span>+<span class="keyword">super</span>.getGirth());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">trapezoid</span> <span class="keyword">implements</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> upper,land,height;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">trapezoid</span> <span class="params">(<span class="keyword">double</span> upper,<span class="keyword">double</span> land,<span class="keyword">double</span> height)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.upper=upper;</span><br><span class="line"><span class="keyword">this</span>.land=land;</span><br><span class="line"><span class="keyword">this</span>.height=height;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> Area = (upper+land)*height/<span class="number">2</span>; </span><br><span class="line"><span class="keyword">return</span> Area;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getGirth</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">trapezoid2</span> <span class="keyword">extends</span> <span class="title">trapezoid</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">trapezoid2</span><span class="params">(<span class="keyword">double</span> upper, <span class="keyword">double</span> land, <span class="keyword">double</span> height)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(upper, land, height);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printC</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"梯形的面积："</span>+<span class="keyword">super</span>.getArea());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Shape_impl</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">circular2 cir2 =<span class="keyword">new</span> circular2(<span class="number">3.5</span>);</span><br><span class="line">cir2.printA();</span><br><span class="line">rectangle2 rec2 = <span class="keyword">new</span> rectangle2(<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line">rec2.printB();</span><br><span class="line">trapezoid2 tra2 = <span class="keyword">new</span> trapezoid2(<span class="number">3.2</span>,<span class="number">4.8</span>,<span class="number">2.2</span>);</span><br><span class="line">tra2.printC();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2020/05/01/java%E6%8E%A5%E5%8F%A3%E7%B1%BB%E5%92%8C%E6%8A%BD%E8%B1%A1%E9%A2%98%E7%9B%AE%E5%AE%9E%E6%88%98/1.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a href=&quot;https://www.jetbrains.com/idea/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.jetbrains.com/idea/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此文章只是我本人自己的学习经验，所以有错误的可以指出来。仅供参考和学习交流。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="学习分享" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB/"/>
    
      <category term="java实战" scheme="http://yoursite.com/tags/java%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>公告</title>
    <link href="http://yoursite.com/2020/04/27/notice/"/>
    <id>http://yoursite.com/2020/04/27/notice/</id>
    <published>2020-04-26T16:00:00.000Z</published>
    <updated>2020-04-28T12:57:41.133Z</updated>
    
    <content type="html"><![CDATA[<p>博客正在开发中😎</p><p>更新日志</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;博客正在开发中😎&lt;/p&gt;
&lt;p&gt;更新日志&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>java学习笔记1</title>
    <link href="http://yoursite.com/2020/04/26/java1/"/>
    <id>http://yoursite.com/2020/04/26/java1/</id>
    <published>2020-04-25T16:00:00.000Z</published>
    <updated>2020-05-01T12:08:50.421Z</updated>
    
    <content type="html"><![CDATA[<h1>java基础语法</h1><img src="/2020/04/26/java1/1.png" alt="1" style="zoom: 150%;"><p>图片来源：<a href="https://www.eclipse.org/downloads/" target="_blank" rel="noopener">https://www.eclipse.org/downloads/</a></p><p font-family="仿宋">java的基础语法需要掌握：java注释（Annotation）、标识符的定义规则、常量、整形常量（byte、short、int、long）、浮点数常量（float、double）、字符常量（char）、字符串常量（""）、布尔常量（boolean）、null常量。</p><a id="more"></a><p>基础语法没什么可以讲的，只不过需要注意一些要点就行。</p><blockquote><p>注释：单行注释:通常用于对程序中的某一行代码进行解释，用符号“//” 表示，“//”后面为被注释的内容。</p><p>多行注释:顾名思义就是在注释中的内容可以为多行，它以符号“/<em>”开头，以符号“</em>/” 结尾。</p><p>文档注释:以‘“/<em>*”开头，并在注释内容末尾以‘“</em>/‘”结束。</p></blockquote><h3 id="定义标识符需注意"><a href="#定义标识符需注意" class="headerlink" title="定义标识符需注意"></a>定义标识符需注意</h3><blockquote><p>1、包名所有字母一律小写。例如: cn.itcast.test.</p><p>2、类名和接口名每个单词的首字母都要大写。如: ArrayLlist、 Iterator。</p><p>3、常量名所有字母都大写，单词之间用下划线连接。例如:DAY_ OF_ _MONTH。</p><p>4、变量名和方法名的第一个单词首字母小写，从第二个单词开始每个单词首字母大写。例如: lineNumber、 getLineNumber.</p><p>5、在程序中，应该尽量使用有意义的英文单词来定义标识符，使得程序便于阅读。例如使用userName表示用户名，password表示密码。</p></blockquote><p>还有在创建package和class的时候不要使用关键字去进行创建，关键字就是java中的函数，比如int  long   double等都是关键字。</p><p>下面是常见的关键字</p><table><thead><tr><th align="center">abstract</th><th align="center"><p align="center">continus</p></th><th align="center">for</th><th align="center">new</th><th align="center">switch</th></tr></thead><tbody><tr><td align="center">assert</td><td align="center"><p align="center">default</p></td><td align="center">goto</td><td align="center">package</td><td align="center">synchronized</td></tr><tr><td align="center">boolean</td><td align="center"><p align="center">do</p></td><td align="center">if</td><td align="center">private</td><td align="center">this</td></tr><tr><td align="center">break</td><td align="center"><p align="center">double</p></td><td align="center">implements</td><td align="center">protected</td><td align="center">throw</td></tr><tr><td align="center">byte</td><td align="center"><p align="center">else</p></td><td align="center">import</td><td align="center">public</td><td align="center">throws</td></tr><tr><td align="center">case</td><td align="center"><p align="center">enum</p></td><td align="center">insranceof</td><td align="center">return</td><td align="center">traneient</td></tr><tr><td align="center">catch</td><td align="center"><p align="center">extends</p></td><td align="center">int</td><td align="center">short</td><td align="center">try</td></tr><tr><td align="center">char</td><td align="center"><p align="center">final</p></td><td align="center">interface</td><td align="center">static</td><td align="center">void</td></tr><tr><td align="center">class</td><td align="center"><p align="center">finally</p></td><td align="center">long</td><td align="center">strictfp</td><td align="center">volatile</td></tr><tr><td align="center">const</td><td align="center"><p align="center">float</p></td><td align="center">native</td><td align="center">super</td><td align="center">while</td></tr></tbody></table><p>博主表示Typora的居中对齐有bug，逼得博主直接align。</p><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>常量就是在程序中固定不变的值，是不能改变的数据。在Java中，常量包括整型常量、浮点数常量、布尔常量、字符常量等。</p><h3 id="整形常量"><a href="#整形常量" class="headerlink" title="整形常量"></a>整形常量</h3><p>整形常量是整数类型的数据，它所表现的形式有以下几种类型。</p><blockquote><p>二进制:由数字0和1组成的数字序列，如: 00110101。</p><p>八进制:以开头并且其后由0 ~7范围(包括和7)内的整数组成的数字序列，如: 0342。</p><p>十进制:由数字0~9范围(包括o和9)内的整数组成的数字序列。如: 198。整数以十进制表示时，第一位不能是0，0本身除外。</p><p>十六进制:以0x或者ox开头并且其后由0—9、A—F(包括和9、A和F)组成的数字序列，如0x25AF。</p></blockquote><h3 id="浮点数常量"><a href="#浮点数常量" class="headerlink" title="浮点数常量"></a>浮点数常量</h3><blockquote><p>浮点数常量就是在数学中用到的小数，分为float单精度浮点数和double双精度浮点数两种类型。其中，单精度浮点数后面以F或f结尾，而双精度浮点数则以D或d结尾。当然，在使用浮点数时也可以在结尾处不加任何的后缀，此时虚拟机会默认为double双精度浮点数。浮点数常量还可以通过指数形式来表示。具体示例如下:2e3f   3.6d    0f    3.84d    5. 022e+23f4</p></blockquote><p>其中e表示倍数，而f是因为在浮点数常量中通过float赋值的情况下，一般默认浮点数的类型为double型，所以需要f来进行确定该值为float类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Market</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">float</span> a = <span class="number">1.2</span>; <span class="comment">//类型不匹配；不能从double转换为float</span></span><br><span class="line">System.out.println(a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面是Eclipse中得出结果，从上面可以看出，不写f的话1.2就会被判断为double型，所以需要在1.2后面加上f才能识别出float类型。</p><p>如果不加f的话也可以解决这个问题吗？可以的,可以使用强制类型转换去进行转换，但是如果数值太大的话则可能会导致数值丢失问题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> a = (<span class="keyword">float</span>) <span class="number">1.2</span>;<span class="comment">//强制类型转换</span></span><br></pre></td></tr></table></figure><p>当数值类型为double类型时，值后面的字母D和d可加可不加。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> a = <span class="number">100.6</span>;</span><br><span class="line"><span class="keyword">double</span> b = <span class="number">152.6</span>d;</span><br></pre></td></tr></table></figure><h3 id="字符常量"><a href="#字符常量" class="headerlink" title="字符常量"></a>字符常量</h3><blockquote><p font-family="仿宋">字符常量用于表示一个字符，一个字符常量要用一对英文半角格式的单引号(' ')引起来，它可以是英文字母、数字、标点符号、以及由转义序列来表示的特殊字符。具体示例如下:'a'    '1'    '&'     '\r  '    '\u0000' </p><p font-family="仿宋">上面的示例中，'\u0000'表示一个空白字符，即在单引号之间没有任何字符。之，所以能这样表示是因为，Java采用的是Unicode字符集,Unicode字符以\u开头，空白字符在Unicode码表中对应的值为'\u0000'。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> a =<span class="string">'a'</span> </span><br><span class="line"><span class="keyword">char</span> b =<span class="string">'\u0000'</span></span><br></pre></td></tr></table></figure><h3 id="字符串常量"><a href="#字符串常量" class="headerlink" title="字符串常量"></a>字符串常量</h3><p>注意：字符串需要英文的括号和双引号，一个字符串可以包含一个字符或多个字符，也可以是不包含任何字符，即长度为零。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(a)<span class="comment">//这个不是字符串哦</span></span><br><span class="line">System.out.println(<span class="string">"a"</span>)<span class="comment">//这个才是(￣▽￣)</span></span><br></pre></td></tr></table></figure><h3 id="布尔常量"><a href="#布尔常量" class="headerlink" title="布尔常量"></a>布尔常量</h3><p>布尔常量在java中不像C++那样使用1和0去表示true或者false.它是直接以true和false的值去进行判断的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Market</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> a1 = <span class="keyword">false</span>;<span class="comment">//声明一个布尔类型，初始值为false</span></span><br><span class="line">        a1 = <span class="keyword">true</span>;<span class="comment">//改变a1变量的值为ture</span></span><br><span class="line">System.out.println(a1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后输出的结果是ture.</p><h3 id="null常量"><a href="#null常量" class="headerlink" title="null常量"></a>null常量</h3><p>null常量只有一个值null，表示对象的引用为空。</p><hr><p>好了，这节java学习笔记到此为止，基础语法部分不是很难，后面才是重点学习的内容，学习笔记2什么时候有空我就什么时候写。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;java基础语法&lt;/h1&gt;

&lt;img src=&quot;/2020/04/26/java1/1.png&quot; alt=&quot;1&quot; style=&quot;zoom: 150%;&quot;&gt;

&lt;p&gt;图片来源：&lt;a href=&quot;https://www.eclipse.org/downloads/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.eclipse.org/downloads/&lt;/a&gt;&lt;/p&gt;
&lt;p font-family=&quot;仿宋&quot;&gt;java的基础语法需要掌握：java注释（Annotation）、标识符的定义规则、常量、整形常量（byte、short、int、long）、浮点数常量（float、double）、字符常量（char）、字符串常量（&quot;&quot;）、布尔常量（boolean）、null常量。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="学习分享" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博客的诞生</title>
    <link href="http://yoursite.com/2020/04/25/next/"/>
    <id>http://yoursite.com/2020/04/25/next/</id>
    <published>2020-04-24T16:00:00.000Z</published>
    <updated>2020-05-01T12:06:11.183Z</updated>
    
    <content type="html"><![CDATA[<h1 id="国外热门下载器IDM快速上手"><a href="#国外热门下载器IDM快速上手" class="headerlink" title="国外热门下载器IDM快速上手"></a>国外热门下载器IDM快速上手</h1><p>这是本人的第一篇博客，望大家海涵，新手博主在线教学。</p><h3 id="首先，了解一下IDM。"><a href="#首先，了解一下IDM。" class="headerlink" title="首先，了解一下IDM。"></a>首先，了解一下IDM。</h3><p><img src="https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=56078837,1567002335&fm=26&gp=0.jpg%5D" alt></p><p>图片来源：<a href="https://chromecj.com/genuine/2019-05/2586.html" target="_blank" rel="noopener">https://chromecj.com/genuine/2019-05/2586.html</a></p><blockquote><p>IDM是一个使用多传输通道进行数据传输的数据传输工具，通俗来讲就是把一个文件分成多份同步进行数据传输，也就是下载，可以将你的网速发挥到很大.</p></blockquote><a id="more"></a><p>IDM不仅仅有着多传输通道的作用，还拥有着嗅探网页的功能，也就是说如果你想在一个网页上下载某个资源的时候IDM就会进行嗅探出这个资源的链接，然后进行传输下载到你的电脑上，通过我的试验，IDM在一般情况下确实可以通过你的网速来进行满速的下载，但这也仅仅只是在一般情况下适用。</p><p>在那些状况下不适用呢？国外的网站，通过某些条件的限制其他网友下载的网站等等.</p><p>那么，下面就开始我们的核心主题，快速上手IDM.</p><h3 id="下载一个IDM"><a href="#下载一个IDM" class="headerlink" title="下载一个IDM"></a>下载一个IDM</h3><p>蓝奏云:<a href="https://shengdetanxi.lanzous.com/ibwc9wb" target="_blank" rel="noopener">IDM下载</a>   密码:d5yz</p><p>官网下载:<a href="http://www.internetdownloadmanager.com/" target="_blank" rel="noopener">http://www.internetdownloadmanager.com/</a></p><p>虽然是破解版,但是请大家不要养成使用破解版的习惯.  如果是特殊原因或者是学生党可以理解,有钱的话还是推荐正版的使用.</p><p>(注意:这不是最新版的IDM,但是博主还是再用,还是不错的一个版本,当然各位博友也可以下载最新版的进行下载使用.)</p><h3 id="安装IDM"><a href="#安装IDM" class="headerlink" title="安装IDM"></a>安装IDM</h3><p>如何安装IDM压缩包里面的已经写得很清楚了.我就不重复说明了.</p><h3 id="如何配置IDM"><a href="#如何配置IDM" class="headerlink" title="如何配置IDM"></a>如何配置IDM</h3><p>先打开IDM中的选项</p><p><img src="/2020/04/25/next/A.png" alt="A"></p><p>在选项的常规中选择你所需要的浏览器,并且勾选”使用高级浏览器集成”,这时可以查看自己选着的浏览器是否有安装IDM插件.</p><p><img src="/2020/04/25/next/B.png" alt="B"></p><p>以谷歌浏览器为例检查自己的插件是否安装成功</p><p><img src="/2020/04/25/next/C.png" alt="C"></p><p>注意:如何没有发现IDM插件那就需要重新配置IDM的选项,还有如果浏览器有插件的情况下发现自己的插件突然变灰然后消失的情况下,重新勾选”使用高级浏览器集成”一项. 然后使用IDM目录里面的IDMGCCExt.crx拖到浏览器的扩展管理面板里面去.</p><h3 id="如何使用IDM进行下载"><a href="#如何使用IDM进行下载" class="headerlink" title="如何使用IDM进行下载"></a>如何使用IDM进行下载</h3><p>这里使用chrome浏览器进行演示说明</p><p><strong>在网页使用插件进行下载</strong></p><p>选择网页中的某个资源或者元素进行右键点击下载</p><p><img src="/2020/04/25/next/D.png" alt="D"></p><p>跳转到IDM的下载页面</p><p><img src="/2020/04/25/next/E.png" alt="E"></p><p>最后点击开始下载就会开始下载，然后保存在你的指定的路径里面。</p><p>以后指不定可以会写进阶的IDM下载教程也说不定。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;国外热门下载器IDM快速上手&quot;&gt;&lt;a href=&quot;#国外热门下载器IDM快速上手&quot; class=&quot;headerlink&quot; title=&quot;国外热门下载器IDM快速上手&quot;&gt;&lt;/a&gt;国外热门下载器IDM快速上手&lt;/h1&gt;&lt;p&gt;这是本人的第一篇博客，望大家海涵，新手博主在线教学。&lt;/p&gt;
&lt;h3 id=&quot;首先，了解一下IDM。&quot;&gt;&lt;a href=&quot;#首先，了解一下IDM。&quot; class=&quot;headerlink&quot; title=&quot;首先，了解一下IDM。&quot;&gt;&lt;/a&gt;首先，了解一下IDM。&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=56078837,1567002335&amp;fm=26&amp;gp=0.jpg%5D&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a href=&quot;https://chromecj.com/genuine/2019-05/2586.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://chromecj.com/genuine/2019-05/2586.html&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IDM是一个使用多传输通道进行数据传输的数据传输工具，通俗来讲就是把一个文件分成多份同步进行数据传输，也就是下载，可以将你的网速发挥到很大.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="IDM" scheme="http://yoursite.com/categories/IDM/"/>
    
      <category term="教程" scheme="http://yoursite.com/categories/IDM/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="http://yoursite.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
